{"remainingRequest":"D:\\jrxcs_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\jrxcs_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jrxcs_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jrxcs_vue\\src\\views\\taskEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jrxcs_vue\\src\\views\\taskEdit.vue","mtime":1551937024797},{"path":"D:\\jrxcs_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jrxcs_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jrxcs_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jrxcs_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"D:\\\\jrxcs_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport _Object$keys from \"D:\\\\jrxcs_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"D:\\\\jrxcs_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar form = {\n  project: {\n    id: '',\n    name: '',\n    downloadUrl: '',\n    type: '',\n    projectManager: '',\n    testManager: ''\n  },\n  task: {\n    id: \"\",\n    catalogId: \"\",\n    projectId: \"\",\n    systemList: [],\n    //提交时 system 字符\n    version: \"\",\n    uploadFile: [],\n    //提交时 testCase\n    kick: \"\",\n    receiveMail: \"\",\n    modelsRemark: \"\"\n  },\n  audit: true,\n  toEmail: ''\n};\nexport default {\n  name: 'taskEdit',\n  data: function data() {\n    return {\n      // catalogId:this.$route.name,\n      form: _objectSpread({}, form),\n      system: [{\n        index: 1,\n        text: '安卓'\n      }, {\n        index: 2,\n        text: 'IOS'\n      }],\n      rules: {\n        name: [{\n          required: true,\n          message: '必填'\n        }],\n        downloadUrl: [{\n          required: true,\n          message: '必填'\n        }],\n        type: [{\n          required: true,\n          message: '必填'\n        }],\n        projectManager: [{\n          required: true,\n          message: '必填'\n        }],\n        testManager: [{\n          required: true,\n          message: '必填'\n        }],\n        projectId: [{\n          required: true,\n          message: '必填'\n        }],\n        version: [{\n          required: true,\n          message: '必填'\n        }],\n        receiveMail: [{\n          required: true,\n          message: '必填'\n        }]\n      }\n    };\n  },\n  methods: {\n    exceed: function exceed(files, fileList) {\n      // console.log(files, fileList)\n      this.$message.error(\"超出限制个数,请先删除列表已有的文件\");\n    },\n    success: function success(response, file, fileList) {\n      // console.log(response, file, fileList,\"success\")\n      this.testCase = '';\n      var status = response.status,\n          data = response.data;\n\n      if (!status) {\n        this.$message.success(\"上传成功！\");\n        this.form.testCase = data.id;\n      } else {\n        this.$message.error(data); // this.fileList = [];\n      }\n    },\n    getCheckboxVal: function getCheckboxVal(labelArr) {\n      var valArr = [];\n      this.system.forEach(function (item) {\n        labelArr.forEach(function (item1) {\n          if (item.text == item1) {\n            valArr.push(item.index);\n          }\n        });\n      });\n      return valArr;\n    },\n    onSubmit: function onSubmit() {// this.$refs.form.validate((valid,obj)=>{\n      // \tif(valid){\n      // \tconst systemList = this.getCheckboxVal(this.form.systemList);\n      // \tlet config = {\n      // \t    // headers: {'Content-Type': 'multipart/form-data;charset=UTF-8'} \n      // \t    // headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'} \n      // \t}; //添加请求头\n      // \t// const testCase = this.fileList\n      // \tthis.$axios.post('/api/task/addTask',{...this.form,systemList,catalogId:this.catalogId})\n      // \t.then(res=>{\n      // \t\tconst {status, data} = res.data;\n      // \t\tif(!status){\n      // \t\t\tthis.$message.success(data);\n      // \t\t\tsetTimeout(()=>{\n      // \t\t\t\tthis.$router.push(\"taskStatus\");\n      // \t\t\t},3000)\n      // \t\t}\n      // \t})\n      // \t}\n      // })\n    },\n    cancel: function cancel() {\n      this.$refs.form.resetFields();\n      this.form = _objectSpread({}, form); // this.fileList = [];\n    },\n    getProTask: function getProTask() {\n      var _this = this;\n\n      var id = this.$route.query.id;\n      this.$axios.get('/api/task/getTask', {\n        params: {\n          id: id\n        }\n      }).then(function (res) {\n        var _res$data = res.data,\n            status = _res$data.status,\n            data = _res$data.data;\n        var keys = _Object$keys;\n\n        if (!status) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _getIterator(keys(_this.form.project)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var key = _step.value;\n              _this.form.project[key] = data.project[key];\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = _getIterator(keys(_this.form.task)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _key = _step2.value;\n              _this.form.task[_key] = data[_key];\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.getProTask();\n  }\n};",{"version":3,"sources":["taskEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div class=\"wrap\">\r\n\t\t<el-form ref=\"form\" :model=\"form\" label-width=\"140px\" :rules=\"rules\">\r\n\t\t <el-form-item label=\"项目名称：\" prop=\"name\">\r\n\t\t    <el-input v-model=\"form.project.name\" placeholder=\"请输入项目名称\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"下载地址：\" prop=\"downloadUrl\">\r\n\t\t    <el-input v-model=\"form.project.downloadUrl\" placeholder=\"请输入下载地址名称\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"平台类型：\" prop=\"type\">\r\n\t\t    <el-select v-model=\"form.project.type\" placeholder=\"请选择平台类型\">\r\n\t\t      <el-option label=\"手机\" value=\"1\"></el-option>\r\n\t\t      <el-option label=\"PAD\" value=\"2\"></el-option>\r\n\t\t      <el-option label=\"H5\" value=\"3\"></el-option>\r\n\t\t      <el-option label=\"微信\" value=\"4\"></el-option>\r\n\t\t    </el-select>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"项目经理：\" prop=\"projectManager\">\r\n\t\t    <el-input v-model=\"form.project.projectManager\" placeholder=\"请输入项目经理\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"测试经理：\" prop=\"testManager\">\r\n\t\t    <el-input v-model=\"form.project.testManager\" placeholder=\"请输入测试经理\"></el-input>\r\n\t\t  </el-form-item>\r\n\r\n\r\n\t\t  <el-form-item label=\"系统选择\">\r\n\t\t    <el-checkbox-group v-model=\"form.task.systemList\">\r\n\t\t      <el-checkbox :label=\"item.text\" name=\"systemList\" v-for=\"item in system\" :key=\"item.index\"></el-checkbox>\r\n\t\t    </el-checkbox-group>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"版本\" prop=\"version\">\r\n\t\t    <el-input v-model=\"form.task.version\" placeholder=\"请填写版本\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"测试用例选择\">\r\n\t\t    <el-upload\r\n\t\t\t  class=\"upload-demo\"\r\n\t\t\t  action=\"/api/file/upload\"\r\n\t\t\t  multiple\r\n\t\t\t  :limit=\"1\"\r\n\t\t\t  :on-exceed=\"exceed\"\r\n\t\t\t  :on-success=\"success\"\r\n\t\t\t  :file-list=\"form.task.uploadFile\">\r\n\t\t\t  <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n\t\t\t  <div slot=\"tip\" class=\"el-upload__tip\">只能上传一个文件，且不超过20M</div>\r\n\t\t\t</el-upload>\r\n\t\t\t<div class=\"care\">*注：标准兼容性测试用例默认覆盖各1,2级页面，如有特殊需求请上传用例，如果没有请选择无</div>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"测试账号是否互踢\">\r\n\t\t    <el-select v-model=\"form.task.kick\" placeholder=\"请选择\">\r\n\t\t      <el-option label=\"是\" value=\"1\"></el-option>\r\n\t\t      <el-option label=\"否\" value=\"2\"></el-option>\r\n\t\t    </el-select>\r\n\t\t    <div class=\"care\">*注：如果账号存在互踢，请至少准备30个账号随测试用例上传</div>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"报告接收邮箱\" prop=\"receiveMail\">\r\n\t\t    <el-input v-model=\"form.task.receiveMail\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"机型备注\">\r\n\t\t    <el-input v-model=\"form.task.modelsRemark\" placeholder=\"默认IOS TOP50  安卓TOP250\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item>\r\n\t\t    <el-button type=\"primary\" @click=\"onSubmit\">确定</el-button>\r\n\t\t    <el-button @click=\"cancel\">取消</el-button>\r\n\t\t  </el-form-item>\r\n\t\t</el-form>\r\n\t</div>\r\n</template>\r\n<script>\r\nconst form = {\r\n\tproject:{\r\n\t\tid:'',\r\n\t\tname:'',\r\n\t\tdownloadUrl:'',\r\n\t\ttype:'',\r\n\t\tprojectManager:'',\r\n\t\ttestManager:'',\r\n\t},\r\n\ttask:{\r\n\t\tid:\"\",  \r\n\t\tcatalogId:\"\",  \r\n\t\tprojectId:\"\", \r\n\t\tsystemList:[], //提交时 system 字符\r\n\t\tversion:\"\", \r\n\t\tuploadFile:[],  //提交时 testCase\r\n\t\tkick:\"\",  \r\n\t\treceiveMail:\"\",  \r\n\t\tmodelsRemark:\"\",  \r\n\t},\r\n\taudit:true,\r\n\ttoEmail:''\r\n}\r\nexport default{\r\n\tname:'taskEdit',\r\n\tdata(){\r\n\t\treturn{\r\n\t\t\t// catalogId:this.$route.name,\r\n\t\t\tform:{...form},\r\n\t\t\tsystem:[{\r\n\t\t\t\tindex:1,\r\n\t\t\t\ttext:'安卓'\r\n\t\t\t},{\r\n\t\t\t\tindex:2,\r\n\t\t\t\ttext:'IOS'\r\n\t\t\t}],\r\n\t\t\trules:{\r\n\t\t\t\tname:[\r\n\t\t\t\t\t{required:true,message:'必填'}\r\n\t\t\t\t],\r\n\t\t\t\tdownloadUrl:[\r\n\t\t\t\t\t{required:true,message:'必填'}\r\n\t\t\t\t],\r\n\t\t\t\ttype:[\r\n\t\t\t\t\t{required:true,message:'必填'}\r\n\t\t\t\t],\r\n\t\t\t\tprojectManager:[\r\n\t\t\t\t\t{required:true,message:'必填'}\r\n\t\t\t\t],\r\n\t\t\t\ttestManager:[\r\n\t\t\t\t\t{required:true,message:'必填'}\r\n\t\t\t\t],\r\n\t\t\t\tprojectId:[\r\n\t\t\t\t\t{required:true,message:'必填'}\r\n\t\t\t\t],\r\n\t\t\t\tversion:[\r\n\t\t\t\t\t{required:true,message:'必填'}\r\n\t\t\t\t],\r\n\t\t\t\treceiveMail:[\r\n\t\t\t\t\t{required:true,message:'必填'}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\tmethods:{\r\n\t\texceed(files, fileList){\r\n\t\t\t// console.log(files, fileList)\r\n\t\t\tthis.$message.error(\"超出限制个数,请先删除列表已有的文件\");\r\n\t\t},\r\n\t\tsuccess(response, file, fileList){\r\n\t\t\t// console.log(response, file, fileList,\"success\")\r\n\t\t\tthis.testCase = '';\r\n\t\t\tconst {status, data} = response;\r\n\t\t\tif(!status){\r\n\t\t\t\tthis.$message.success(\"上传成功！\");\r\n\t\t\t\tthis.form.testCase = data.id;\r\n\t\t\t}else{\r\n\t\t\t\tthis.$message.error(data);\r\n\t\t\t\t// this.fileList = [];\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetCheckboxVal(labelArr){\r\n\t\t\tlet valArr = [];\r\n\t\t\tthis.system.forEach(item=>{\r\n\t\t\t\tlabelArr.forEach(item1=>{\r\n\t\t\t\t\tif(item.text == item1) {valArr.push(item.index)}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn valArr\r\n\t\t},\r\n\t\tonSubmit(){\r\n\t\t\t// this.$refs.form.validate((valid,obj)=>{\r\n\t\t\t// \tif(valid){\r\n\t\t\t\t// \tconst systemList = this.getCheckboxVal(this.form.systemList);\r\n\t\t\t\t// \tlet config = {\r\n\t\t\t\t// \t    // headers: {'Content-Type': 'multipart/form-data;charset=UTF-8'} \r\n\t\t\t\t// \t    // headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'} \r\n\t\t\t\t// \t}; //添加请求头\r\n\t\t\t\t// \t// const testCase = this.fileList\r\n\t\t\t\t// \tthis.$axios.post('/api/task/addTask',{...this.form,systemList,catalogId:this.catalogId})\r\n\t\t\t\t// \t.then(res=>{\r\n\t\t\t\t// \t\tconst {status, data} = res.data;\r\n\t\t\t\t// \t\tif(!status){\r\n\t\t\t\t// \t\t\tthis.$message.success(data);\r\n\t\t\t\t// \t\t\tsetTimeout(()=>{\r\n\t\t\t\t// \t\t\t\tthis.$router.push(\"taskStatus\");\r\n\t\t\t\t// \t\t\t},3000)\r\n\t\t\t\t// \t\t}\r\n\t\t\t\t// \t})\r\n\t\t\t// \t}\r\n\t\t\t// })\r\n\t\t},\r\n\t\tcancel(){\r\n\t\t\tthis.$refs.form.resetFields();\r\n\t\t\tthis.form = {...form};\r\n\t\t\t// this.fileList = [];\r\n\t\t},\r\n\t\tgetProTask(){\r\n\t\t\tconst id = this.$route.query.id;\r\n\t\t\tthis.$axios.get('/api/task/getTask', {params:{id}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tconst {status, data} = res.data;\r\n\t\t\t\tconst {keys} = Object;\r\n\t\t\t\tif(!status){\r\n\t\t\t\t\tfor(let key of keys(this.form.project)){\r\n\t\t\t\t\t\tthis.form.project[key]=data.project[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(let key of keys(this.form.task)){\r\n\t\t\t\t\t\tthis.form.task[key]=data[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\tcreated(){\r\n\t\tthis.getProTask();\r\n\t}\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.fl{\r\n\tfloat:left;\r\n}\r\n.span-font{\r\n\tfont-size: 20px;\r\n    color:gray;\r\n}\r\n.wrap{\r\n\t@extend .span-font;\r\n\twidth: 70%;\r\n    text-align:left;\r\n    .care{\r\n    \tcolor: #c0c4cc;\r\n    }\r\n}\r\n\r\n</style>"],"sourceRoot":"src/views"}]}