{"remainingRequest":"D:\\jrxcs_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\jrxcs_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jrxcs_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jrxcs_vue\\src\\views\\taskEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\jrxcs_vue\\src\\views\\taskEdit.vue","mtime":1551951030710},{"path":"D:\\jrxcs_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jrxcs_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\jrxcs_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jrxcs_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"D:\\\\jrxcs_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport _Object$is from \"D:\\\\jrxcs_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/is\";\nimport _Object$keys from \"D:\\\\jrxcs_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"D:\\\\jrxcs_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"D:\\\\jrxcs_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar form = {\n  project: {\n    id: '',\n    name: '',\n    downloadUrl: '',\n    type: '',\n    projectManager: '',\n    testManager: ''\n  },\n  task: {\n    id: \"\",\n    catalogId: \"\",\n    projectId: \"\",\n    systemList: [],\n    //提交时 system 字符\n    version: \"\",\n    uploadFile: [],\n    //提交时 testCase\n    kick: \"\",\n    receiveMail: \"\",\n    modelsRemark: \"\"\n  },\n  audit: true,\n  toEmail: '785188646@qq.com'\n};\nexport default {\n  name: 'taskEdit',\n  data: function data() {\n    return {\n      isEdit: this.$route.query.isEdit,\n      form: _objectSpread({}, form),\n      system: [{\n        index: \"1\",\n        text: '安卓'\n      }, {\n        index: \"2\",\n        text: 'IOS'\n      }],\n      rules: {// name:[\n        // \t{required:true,message:'必填'}\n        // ],\n        // downloadUrl:[\n        // \t{required:true,message:'必填'}\n        // ],\n        // type:[\n        // \t{required:true,message:'必填'}\n        // ],\n        // projectManager:[\n        // \t{required:true,message:'必填'}\n        // ],\n        // testManager:[\n        // \t{required:true,message:'必填'}\n        // ],\n        // projectId:[\n        // \t{required:true,message:'必填'}\n        // ],\n        // version:[\n        // \t{required:true,message:'必填'}\n        // ],\n        // receiveMail:[\n        // \t{required:true,message:'必填'}\n        // ]\n      }\n    };\n  },\n  methods: {\n    exceed: function exceed(files, fileList) {\n      // console.log(files, fileList)\n      this.$message.error(\"超出限制个数,请先删除列表已有的文件\");\n    },\n    success: function success(response, file, fileList) {\n      console.log(response, file, fileList);\n      var status = response.status,\n          data = response.data;\n\n      if (!status) {\n        this.$message.success(\"上传成功！\");\n        response.data.name = response.data.fileName;\n        this.form.task.uploadFile.push(response.data);\n        console.log(this.form.task.uploadFile, \"this.form.task.uploadFile\");\n      } else {\n        this.$message.error(data);\n        this.form.task.uploadFile = [];\n      }\n    },\n    remove: function remove(files, fileList) {\n      this.form.task.uploadFile = fileList;\n    },\n    getCheckboxVal: function getCheckboxVal(labelArr) {\n      var valArr = [];\n      this.system.forEach(function (item) {\n        labelArr.forEach(function (item1) {\n          if (item.text == item1) {\n            valArr.push(item.index);\n          }\n        });\n      });\n      return valArr;\n    },\n    getCheckboxLabel: function getCheckboxLabel(valArr) {\n      var labelArr = [];\n      this.system.forEach(function (item) {\n        valArr.forEach(function (item1) {\n          if (item.index == item1) {\n            labelArr.push(item.text);\n          }\n        });\n      });\n      return labelArr;\n    },\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      this.$refs.form.validate(function (valid, obj) {\n        if (valid) {\n          var systemList = _this.getCheckboxVal(_this.form.task.systemList);\n\n          var data = JSON.parse(_JSON$stringify(_this.form));\n          data.task.system = systemList.join(\",\");\n          data.task.testCase = _this.form.task.uploadFile.length ? _this.form.task.uploadFile[0].id : '';\n          delete data.task.systemList;\n          delete data.task.uploadFile;\n\n          _this.$axios.post('/api/task/auditTask', _objectSpread({}, data)).then(function (res) {\n            var _res$data = res.data,\n                status = _res$data.status,\n                data = _res$data.data;\n\n            if (!status) {\n              _this.$message.success(data);\n\n              _this.$router.push(\"proManage\");\n            }\n          });\n        }\n      });\n    },\n    cancel: function cancel() {\n      this.$refs.form.resetFields(); // this.form = {...form};\n      // this.fileList = [];\n\n      this.$router.push(\"proManage\");\n    },\n    getProTask: function getProTask() {\n      var _this2 = this;\n\n      var id = this.$route.query.id;\n      this.$axios.get('/api/task/getTask', {\n        params: {\n          id: id\n        }\n      }).then(function (res) {\n        var _res$data2 = res.data,\n            status = _res$data2.status,\n            data = _res$data2.data;\n        var keys = _Object$keys,\n            is = _Object$is;\n\n        if (!status) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _getIterator(keys(_this2.form.project)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var key = _step.value;\n              _this2.form.project[key] = data.project[key];\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = _getIterator(keys(_this2.form.task)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _key = _step2.value;\n              _this2.form.task[_key] = data[_key];\n\n              if (is(_key, \"systemList\")) {\n                _this2.form.task[_key] = _this2.getCheckboxLabel(data[_key]);\n              }\n\n              if (is(_key, \"uploadFile\")) {\n                _this2.form.task[_key] = [];\n\n                if (data[_key]) {\n                  var _data$_key = data[_key],\n                      fileName = _data$_key.fileName,\n                      fullPath = _data$_key.fullPath,\n                      _id = _data$_key.id;\n                  if (fileName && fullPath && _id) _this2.form.task[_key] = [{\n                    name: fileName,\n                    url: '/api' + fullPath,\n                    id: _id\n                  }];\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getProTask();\n  }\n};",{"version":3,"sources":["taskEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div class=\"wrap\">\r\n\t\t<el-form ref=\"form\" :model=\"form\" label-width=\"140px\" :rules=\"rules\">\r\n\t\t <el-form-item label=\"项目名称：\" prop=\"name\">\r\n\t\t    <el-input v-model=\"form.project.name\" placeholder=\"请输入项目名称\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"下载地址：\" prop=\"downloadUrl\">\r\n\t\t    <el-input v-model=\"form.project.downloadUrl\" placeholder=\"请输入下载地址名称\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"平台类型：\" prop=\"type\">\r\n\t\t    <el-select v-model=\"form.project.type\" placeholder=\"请选择平台类型\">\r\n\t\t      <el-option label=\"手机\" value=\"1\"></el-option>\r\n\t\t      <el-option label=\"PAD\" value=\"2\"></el-option>\r\n\t\t      <el-option label=\"H5\" value=\"3\"></el-option>\r\n\t\t      <el-option label=\"微信\" value=\"4\"></el-option>\r\n\t\t    </el-select>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"项目经理：\" prop=\"projectManager\">\r\n\t\t    <el-input v-model=\"form.project.projectManager\" placeholder=\"请输入项目经理\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"测试经理：\" prop=\"testManager\">\r\n\t\t    <el-input v-model=\"form.project.testManager\" placeholder=\"请输入测试经理\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"系统选择\">\r\n\t\t    <el-checkbox-group v-model=\"form.task.systemList\">\r\n\t\t      <el-checkbox :label=\"item.text\" name=\"systemList\" v-for=\"item in system\" :key=\"item.index\"></el-checkbox>\r\n\t\t    </el-checkbox-group>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"版本\" prop=\"version\">\r\n\t\t    <el-input v-model=\"form.task.version\" placeholder=\"请填写版本\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"测试用例选择\">\r\n\t\t    <el-upload\r\n\t\t\t  class=\"upload-demo\"\r\n\t\t\t  action=\"/api/file/upload\"\r\n\t\t\t  multiple\r\n\t\t\t  :limit=\"1\"\r\n\t\t\t  :on-exceed=\"exceed\"\r\n\t\t\t  :on-success=\"success\"\r\n\t\t\t  :on-remove=\"remove\"\r\n\t\t\t  :file-list=\"form.task.uploadFile\">\r\n\t\t\t  <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n\t\t\t  <div slot=\"tip\" class=\"el-upload__tip\">只能上传一个文件，且不超过20M</div>\r\n\t\t\t</el-upload>\r\n\t\t\t<div class=\"care\">*注：标准兼容性测试用例默认覆盖各1,2级页面，如有特殊需求请上传用例，如果没有请选择无</div>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"测试账号是否互踢\">\r\n\t\t    <el-select v-model=\"form.task.kick\" placeholder=\"请选择\">\r\n\t\t      <el-option label=\"是\" value=\"1\"></el-option>\r\n\t\t      <el-option label=\"否\" value=\"2\"></el-option>\r\n\t\t    </el-select>\r\n\t\t    <div class=\"care\">*注：如果账号存在互踢，请至少准备30个账号随测试用例上传</div>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"报告接收邮箱\" prop=\"receiveMail\">\r\n\t\t    <el-input v-model=\"form.task.receiveMail\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"机型备注\">\r\n\t\t    <el-input v-model=\"form.task.modelsRemark\" placeholder=\"默认IOS TOP50  安卓TOP250\"></el-input>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item label=\"供应商选择：\" prop=\"toEmail\">\r\n\t\t    <el-select v-model=\"form.toEmail\" placeholder=\"请选择供应商\">\r\n\t\t      <el-option label=\"785188646@qq.com\" value=\"785188646@qq.com\"></el-option>\r\n\t\t      <el-option label=\"123456@qq.com\" value=\"2\"></el-option>\r\n\t\t    </el-select>\r\n\t\t  </el-form-item>\r\n\t\t  <el-form-item>\r\n\t\t    <el-button type=\"primary\" @click=\"onSubmit\" v-if=\"isEdit\">通过</el-button>\r\n\t\t    <el-button @click=\"cancel\">取消</el-button>\r\n\t\t  </el-form-item>\r\n\t\t</el-form>\r\n\t</div>\r\n</template>\r\n<script>\r\nconst form = {\r\n\tproject:{\r\n\t\tid:'',\r\n\t\tname:'',\r\n\t\tdownloadUrl:'',\r\n\t\ttype:'',\r\n\t\tprojectManager:'',\r\n\t\ttestManager:'',\r\n\t},\r\n\ttask:{\r\n\t\tid:\"\",  \r\n\t\tcatalogId:\"\",  \r\n\t\tprojectId:\"\", \r\n\t\tsystemList:[], //提交时 system 字符\r\n\t\tversion:\"\", \r\n\t\tuploadFile:[],  //提交时 testCase\r\n\t\tkick:\"\",  \r\n\t\treceiveMail:\"\",  \r\n\t\tmodelsRemark:\"\",  \r\n\t},\r\n\taudit:true,\r\n\ttoEmail:'785188646@qq.com'\r\n}\r\nexport default{\r\n\tname:'taskEdit',\r\n\tdata(){\r\n\t\treturn{\r\n\t\t\tisEdit:this.$route.query.isEdit,\r\n\t\t\tform:{...form},\r\n\t\t\tsystem:[{\r\n\t\t\t\tindex:\"1\",\r\n\t\t\t\ttext:'安卓'\r\n\t\t\t},{\r\n\t\t\t\tindex:\"2\",\r\n\t\t\t\ttext:'IOS'\r\n\t\t\t}],\r\n\t\t\trules:{\r\n\t\t\t\t// name:[\r\n\t\t\t\t// \t{required:true,message:'必填'}\r\n\t\t\t\t// ],\r\n\t\t\t\t// downloadUrl:[\r\n\t\t\t\t// \t{required:true,message:'必填'}\r\n\t\t\t\t// ],\r\n\t\t\t\t// type:[\r\n\t\t\t\t// \t{required:true,message:'必填'}\r\n\t\t\t\t// ],\r\n\t\t\t\t// projectManager:[\r\n\t\t\t\t// \t{required:true,message:'必填'}\r\n\t\t\t\t// ],\r\n\t\t\t\t// testManager:[\r\n\t\t\t\t// \t{required:true,message:'必填'}\r\n\t\t\t\t// ],\r\n\t\t\t\t// projectId:[\r\n\t\t\t\t// \t{required:true,message:'必填'}\r\n\t\t\t\t// ],\r\n\t\t\t\t// version:[\r\n\t\t\t\t// \t{required:true,message:'必填'}\r\n\t\t\t\t// ],\r\n\t\t\t\t// receiveMail:[\r\n\t\t\t\t// \t{required:true,message:'必填'}\r\n\t\t\t\t// ]\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\tmethods:{\r\n\t\texceed(files, fileList){\r\n\t\t\t// console.log(files, fileList)\r\n\t\t\tthis.$message.error(\"超出限制个数,请先删除列表已有的文件\");\r\n\t\t},\r\n\t\tsuccess(response, file, fileList){\r\n\t\t\tconsole.log(response, file, fileList);\r\n\t\t\tconst {status, data} = response;\r\n\t\t\tif(!status){\r\n\t\t\t\tthis.$message.success(\"上传成功！\");\r\n\t\t\t\tresponse.data.name = response.data.fileName;\r\n\t\t\t\tthis.form.task.uploadFile.push(response.data);\r\n\t\t\t\tconsole.log(this.form.task.uploadFile,\"this.form.task.uploadFile\")\r\n\t\t\t}else{\r\n\t\t\t\tthis.$message.error(data);\r\n\t\t\t\tthis.form.task.uploadFile = [];\r\n\t\t\t}\r\n\t\t},\r\n\t\tremove(files, fileList){\r\n\t\t\tthis.form.task.uploadFile = fileList;\r\n\t\t},\r\n\t\tgetCheckboxVal(labelArr){\r\n\t\t\tlet valArr = [];\r\n\t\t\tthis.system.forEach(item=>{\r\n\t\t\t\tlabelArr.forEach(item1=>{\r\n\t\t\t\t\tif(item.text == item1) {valArr.push(item.index)}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn valArr\r\n\t\t},\r\n\t\tgetCheckboxLabel(valArr){\r\n\t\t\tlet labelArr = [];\r\n\t\t\tthis.system.forEach(item=>{\r\n\t\t\t\tvalArr.forEach(item1=>{\r\n\t\t\t\t\tif(item.index == item1) {labelArr.push(item.text)}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn labelArr\r\n\t\t},\r\n\t\tonSubmit(){\r\n\t\t\tthis.$refs.form.validate((valid,obj)=>{\r\n\t\t\t\tif(valid){\r\n\t\t\t\t\tconst systemList = this.getCheckboxVal(this.form.task.systemList); \r\n\t\t\t\t\tlet data = JSON.parse(JSON.stringify(this.form));\r\n\t\t\t\t\tdata.task.system = systemList.join(\",\");\r\n\t\t\t\t\tdata.task.testCase = this.form.task.uploadFile.length?this.form.task.uploadFile[0].id:'';\r\n\t\t\t\t\tdelete data.task.systemList;\r\n\t\t\t\t\tdelete data.task.uploadFile;\r\n\t\t\t\t\tthis.$axios.post('/api/task/auditTask',{...data})\r\n\t\t\t\t\t.then(res=>{\r\n\t\t\t\t\t\tconst {status, data} = res.data;\r\n\t\t\t\t\t\tif(!status){\r\n\t\t\t\t\t\t\tthis.$message.success(data);\r\n\t\t\t\t\t\t\tthis.$router.push(\"proManage\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tcancel(){\r\n\t\t\tthis.$refs.form.resetFields();\r\n\t\t\t// this.form = {...form};\r\n\t\t\t// this.fileList = [];\r\n\t\t\tthis.$router.push(\"proManage\")\r\n\t\t},\r\n\t\tgetProTask(){\r\n\t\t\tconst id = this.$route.query.id;\r\n\t\t\tthis.$axios.get('/api/task/getTask', {params:{id}})\r\n\t\t\t.then((res)=>{\r\n\t\t\t\tconst {status, data} = res.data;\r\n\t\t\t\tconst {keys, is} = Object;\r\n\t\t\t\tif(!status){\r\n\t\t\t\t\tfor(let key of keys(this.form.project)){\r\n\t\t\t\t\t\tthis.form.project[key]=data.project[key];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(let key of keys(this.form.task)){\r\n\t\t\t\t\t\tthis.form.task[key]=data[key];\r\n\t\t\t\t\t\tif(is(key,\"systemList\")){\r\n\t\t\t\t\t\t\tthis.form.task[key]=this.getCheckboxLabel(data[key]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(is(key,\"uploadFile\")){\r\n\t\t\t\t\t\t\tthis.form.task[key] = []\r\n\t\t\t\t\t\t\tif(data[key]){\r\n\t\t\t\t\t\t\t\tconst {fileName,fullPath, id} = data[key];\r\n\t\t\t\t\t\t\t\tif(fileName&&fullPath&&id) this.form.task[key]=[{name:fileName,url:'/api'+fullPath,id}];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t},\r\n\tmounted(){\r\n\t\tthis.getProTask();\r\n\t}\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.fl{\r\n\tfloat:left;\r\n}\r\n.span-font{\r\n\tfont-size: 20px;\r\n    color:gray;\r\n}\r\n.wrap{\r\n\t@extend .span-font;\r\n\twidth: 70%;\r\n    text-align:left;\r\n    .care{\r\n    \tcolor: #c0c4cc;\r\n    }\r\n}\r\n\r\n</style>"],"sourceRoot":"src/views"}]}