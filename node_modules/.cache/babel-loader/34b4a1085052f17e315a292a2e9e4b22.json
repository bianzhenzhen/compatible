{"remainingRequest":"D:\\project2\\node_modules\\babel-loader\\lib\\index.js!D:\\project2\\src\\apis\\apiConfig.js","dependencies":[{"path":"D:\\project2\\src\\apis\\apiConfig.js","mtime":1551079789708},{"path":"D:\\project2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Axios from 'axios';\nexport default (function (url) {\n  var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n  var data = arguments.length > 2 ? arguments[2] : undefined;\n  var selfCb = arguments.length > 3 ? arguments[3] : undefined;\n  var errCb = arguments.length > 4 ? arguments[4] : undefined;\n\n  if (method == 'GET') {\n    data.params.date = new Date().getTime();\n  }\n\n  Axios({\n    url: url,\n    method: method,\n    data: data\n  }).then(function (response) {\n    selfCb && selfCb(response);\n  }).catch(function (error) {\n    errCb && errCb(error);\n    console.log(error);\n  });\n});",{"version":3,"sources":["D:\\project2\\src\\apis\\apiConfig.js"],"names":["Axios","url","method","data","selfCb","errCb","params","date","Date","getTime","then","response","catch","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,gBAAe,UAACC,GAAD,EAA4C;AAAA,MAAtCC,MAAsC,uEAA/B,KAA+B;AAAA,MAAxBC,IAAwB;AAAA,MAAlBC,MAAkB;AAAA,MAAVC,KAAU;;AAC1D,MAAGH,MAAM,IAAI,KAAb,EAAmB;AAClBC,IAAAA,IAAI,CAACG,MAAL,CAAYC,IAAZ,GAAmB,IAAIC,IAAJ,GAAWC,OAAX,EAAnB;AACA;;AACDT,EAAAA,KAAK,CAAC;AACHC,IAAAA,GAAG,EAAHA,GADG;AAELC,IAAAA,MAAM,EAANA,MAFK;AAGHC,IAAAA,IAAI,EAAJA;AAHG,GAAD,CAAL,CAIGO,IAJH,CAIQ,UAACC,QAAD,EAAY;AACnBP,IAAAA,MAAM,IAAIA,MAAM,CAACO,QAAD,CAAhB;AACA,GAND,EAMGC,KANH,CAMU,UAACC,KAAD,EAAS;AAClBR,IAAAA,KAAK,IAAIA,KAAK,CAACQ,KAAD,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,GATD;AAUA,CAdD","sourcesContent":["import Axios from 'axios'\r\nexport default (url, method=\"GET\", data, selfCb, errCb) => {\r\n\tif(method == 'GET'){\r\n\t\tdata.params.date = new Date().getTime()\r\n\t}\r\n\tAxios({\r\n\t  \turl,\r\n\t\tmethod,\r\n\t  \tdata\r\n\t}).then((response)=>{\r\n\t\tselfCb && selfCb(response)\r\n\t}).catch( (error)=>{\r\n\t\terrCb && errCb(error)\r\n\t\tconsole.log(error);\r\n\t})\r\n}"]}]}